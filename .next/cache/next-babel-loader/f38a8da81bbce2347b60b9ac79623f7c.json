{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/michal.grabowski/Documents/learning/todo/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar axios = require('axios');\n\nvar Index = function Index() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \"dsadas\");\n};\n\nIndex.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.fetch('https://localhost:3009/api/todos', {\n            method: 'GET'\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {// shows: data.map(entry => entry.show)\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/michal.grabowski/Documents/learning/todo/pages/index.js"],"names":["axios","require","Index","getInitialProps","fetch","method","res"],"mappings":";;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,CAND;;AAQAA,KAAK,CAACC,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJH,KAAK,CAErBI,KAFgB,CAEV,kCAFU,EAE0B;AAC1CC,YAAAA,MAAM,EAAE;AADkC,WAF1B,CADI;;AAAA;AAChBC,UAAAA,GADgB;AAAA,2CAQf,CACL;AADK,WARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaA,eAAeJ,KAAf","sourcesContent":["const axios = require('axios');\n\nconst Index = () => {\n  return (\n    <div>\n      dsadas\n    </div>\n  )\n}\n\nIndex.getInitialProps = async function () {\n  const res = await axios.\n\n    fetch('https://localhost:3009/api/todos', {\n    method: 'GET',\n  });\n  // console.log(res);\n\n  return {\n    // shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}